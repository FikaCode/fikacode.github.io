<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fikacode.github.io</id>
    <title>Drinker</title>
    <updated>2021-02-01T09:44:57.573Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://fikacode.github.io"/>
    <link rel="self" href="https://fikacode.github.io/atom.xml"/>
    <subtitle>玻璃晴朗，橘子辉煌</subtitle>
    <logo>https://fikacode.github.io/images/avatar.png</logo>
    <icon>https://fikacode.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Drinker</rights>
    <entry>
        <title type="html"><![CDATA[linux 更改时间为北京时间]]></title>
        <id>https://fikacode.github.io/post/setLinuxBeijingZone/</id>
        <link href="https://fikacode.github.io/post/setLinuxBeijingZone/">
        </link>
        <updated>2021-02-01T09:44:10.000Z</updated>
        <content type="html"><![CDATA[<h4 id="1-删除自带的localtime">1. 删除自带的localtime</h4>
<p>  <code>rm -rf /etc/localtime</code></p>
<h4 id="2-创建软链接到localtime">2. 创建软链接到localtime</h4>
<p>  <code>ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[获取任何一个类的VO]]></title>
        <id>https://fikacode.github.io/post/javaGetAnyVo/</id>
        <link href="https://fikacode.github.io/post/javaGetAnyVo/">
        </link>
        <updated>2021-02-01T09:43:30.000Z</updated>
        <content type="html"><![CDATA[<pre><code>package com.auth.frame.common.Utils;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.BeanUtils;

import java.lang.reflect.Field;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * @ClassName DTOVOUtil
 * @Author WFS
 * @Date 2020/1/20 16:24
 */
@Slf4j
public class DTOToVOUtil {

    @SuppressWarnings(&quot;unchecked&quot;)
    public static &lt;T&gt; T getVo(T c, String necessary, String exception) {
        if (necessary == null || &quot;&quot;.equals(necessary.replaceAll(&quot; &quot;, &quot;&quot;))) {
            necessary = &quot;&quot;;
        }
        if (exception == null || &quot;&quot;.equals(exception.replaceAll(&quot; &quot;, &quot;&quot;))) {
            exception = &quot;&quot;;
        }
        necessary = necessary.replaceAll(&quot; &quot;, &quot;&quot;);
        exception = exception.replaceAll(&quot; &quot;, &quot;&quot;);
        List&lt;String&gt; nl;
        List&lt;String&gt; e = Arrays.asList(exception.split(&quot;,&quot;));
        if (&quot;&quot;.equals(necessary)) {
            nl = Stream.of(c.getClass().getDeclaredFields()).map(Field::getName).collect(Collectors.toList());
        } else {
            nl = Arrays.asList(necessary.split(&quot;,&quot;));
        }
        List&lt;String&gt; n = nl.stream().filter(ele -&gt; e.stream().noneMatch(ele::equals)).collect(Collectors.toList());
        try {
            Object cn = Class.forName(c.getClass().getName()).newInstance();
            String[] ig = Stream.of(c.getClass().getDeclaredFields()).filter(ele -&gt; n.stream().noneMatch(ele.getName()::equals)).map(Field::getName).toArray(String[]::new);
            BeanUtils.copyProperties(c, cn, ig);
            return (T) cn;
        } catch (Exception exp) {
            log.error(&quot;获取VO失败&quot;, exp);
            return null;
        }
    }
}
</code></pre>
<h4 id="使用说明">使用说明</h4>
<p>  参数<code>necessary</code>是一个字符串，如果是null或者&quot;&quot;则默认包含所有，exception 过滤的字符串，如果为null或者&quot;&quot;，则不过滤。比如：实体A，包含<code>name</code>，<code>value</code>, <code>id</code>三个属性，<code>getVo(A, &quot;name&quot;, null)</code>,则获得一个只有name值的A；<code>getVo(A, null, &quot;value,id&quot;)</code>获得相同的结果；<code>getVo(A, null, &quot;name, value&quot;)</code>，获得一个A，且把A的属性<code>name</code>和<code>value</code>置为null。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Maven 添加第三方jar包]]></title>
        <id>https://fikacode.github.io/post/mavenAddExtraJar/</id>
        <link href="https://fikacode.github.io/post/mavenAddExtraJar/">
        </link>
        <updated>2021-02-01T09:42:18.000Z</updated>
        <content type="html"><![CDATA[<h4 id="maven-添加第三方jar包">maven 添加第三方jar包</h4>
<pre><code>&lt;dependency&gt;
	&lt;groupId&gt;com.km.studio&lt;/groupId&gt;
	&lt;artifactId&gt;auth&lt;/artifactId&gt;
	&lt;version&gt;1.0&lt;/version&gt;
	&lt;scope&gt;system&lt;/scope&gt;
	&lt;systemPath&gt;${project.basedir}/lib/auth.jar&lt;/systemPath&gt;
&lt;/dependency&gt;
</code></pre>
<blockquote>
<p><code>${project.basedir}</code> 代表项目根目录，即<code>lib</code>和<code>src</code>同级</p>
</blockquote>
<h4 id="jar方式打包第三方jar包">jar方式打包第三方jar包</h4>
<pre><code>&lt;plugin&gt;
	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
	&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
	&lt;configuration&gt;
	&lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt;
	&lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>
<h4 id="war方式打包第三方jar包">war方式打包第三方jar包</h4>
<pre><code>&lt;build&gt;
   &lt;plugins&gt;
       &lt;plugin&gt;
           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
           &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
           &lt;configuration&gt;
               &lt;includeSystemScope&gt;true&lt;/includeSystemScope&gt;
           &lt;/configuration&gt;
       &lt;/plugin&gt;
       &lt;plugin&gt;
           &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
           &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
           &lt;configuration&gt;
               &lt;webResources&gt;
                   &lt;resource&gt;
                       &lt;directory&gt;lib&lt;/directory&gt;
                       &lt;targetPath&gt;WEB-INF/lib/&lt;/targetPath&gt;
                       &lt;includes&gt;
                           &lt;include&gt;**/*.jar&lt;/include&gt;
                       &lt;/includes&gt;
                   &lt;/resource&gt;
               &lt;/webResources&gt;
           &lt;/configuration&gt;
       &lt;/plugin&gt;
   &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java 断点续传下载文件]]></title>
        <id>https://fikacode.github.io/post/javaBrokenPointDownload/</id>
        <link href="https://fikacode.github.io/post/javaBrokenPointDownload/">
        </link>
        <updated>2021-02-01T09:41:24.000Z</updated>
        <content type="html"><![CDATA[<h4 id="来自网上">来自网上。</h4>
<pre><code>        String filePath = downLoadFile + pathSeparator + fileName;
        InputStream inputStream = null;
        OutputStream out = null;
        try {
            File file = new File(filePath);
            Long fSize = Long.parseLong(String.valueOf(file.length()));
            response.setCharacterEncoding(&quot;utf-8&quot;);
            response.setContentType(&quot;application/x-download&quot;);
            response.setHeader(&quot;Accept-Ranges&quot;, &quot;bytes&quot;);
            response.setHeader(&quot;Content-Length&quot;, String.valueOf(fSize));
            response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;fileName=&quot; + new String(fileName.getBytes(&quot;utf-8&quot;), &quot;ISO8859-1&quot;));
            inputStream = new FileInputStream(filePath);
            Long pos = 0L;
            if (null != request.getHeader(&quot;Range&quot;)) {
                // 断点续传
                response.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);
                try {
                    pos = Long.valueOf(request.getHeader(&quot;Range&quot;).replaceAll(&quot;bytes=&quot;, &quot;&quot;).replaceAll(&quot;-&quot;, &quot;&quot;));
                } catch (NumberFormatException e) {
                    pos = 0L;
                }
            }
            out = response.getOutputStream();
            String contentRange = &quot;bytes &quot; + pos + &quot;&quot; + &quot;-&quot; + (fSize - 1) + &quot;&quot; + &quot;/&quot; + fSize + &quot;&quot;;
            response.setHeader(&quot;Content-Range&quot;, contentRange);
            //跳过 pos 个文件字节
            Long offset = pos;
            while (offset &gt; 0) {
                Long fileAt = inputStream.skip(offset);
                if (fileAt == -1) {
                    throw new RuntimeException(&quot;文件断点设置失败！&quot;);
                }
                offset -= fileAt;
            }
            byte[] buffer = new byte[1024 * 10];
            int length;
            while ((length = inputStream.read(buffer, 0, buffer.length)) != -1) {
                out.write(buffer, 0, length);
            }
        } catch (Exception e) {
            LOGGER.error(&quot;下载异常：&quot; + e);
        } finally {
            try {
                if (null != out) out.flush();
                if (null != out) out.close();
                if (null != inputStream) inputStream.close();
            } catch (IOException e) {
                LOGGER.error(&quot;关闭数据流异常：&quot; + e);
            }
        }
    }
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[java 比较完美的生成验证码的方案]]></title>
        <id>https://fikacode.github.io/post/javaImageCode/</id>
        <link href="https://fikacode.github.io/post/javaImageCode/">
        </link>
        <updated>2021-02-01T09:40:32.000Z</updated>
        <content type="html"><![CDATA[<p>  记得是网上找的，自己改了一下，数字、+ 和等于都是随机的。</p>
<pre><code>package com.km.studio.miJiao.app.noAuthUrl;

import java.awt.*;
import java.awt.image.BufferedImage;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;


public class CreateImageCode {
    //verification code image width
    private static final int IMG_WIDTH = 146;
    //verification code image height
    private static final int IMG_HEIGHT = 30;
    //The number of interference lines
    private static final int DISTURB_LINE_SIZE = 15;
    //generate a random number
    private static Random random = new Random();
    //result
    private static int result;
    //result random string
    private static String randomString;
    //Chinese Numbers

    //Here, must be java Unicode code
    private static final String CUCUMBERS = &quot;\u96F6\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u4E58\u9664\u52A0\u51CF&quot;;
    private static final String NUM_STR = &quot;\u0030\u0031\u0032\u0033\u0034\u0035\u0036\u0037\u0038\u0039\u203b\u002f\u002b\u2796&quot;;
    //data operator
    private static final Map&lt;String, Integer&gt; OPMap = new HashMap&lt;&gt;();

    static {
        OPMap.put(&quot;*&quot;, 10);
        OPMap.put(&quot;/&quot;, 11);
        OPMap.put(&quot;+&quot;, 12);
        OPMap.put(&quot;-&quot;, 13);
    }

    /**
     * The generation of image  verification code
     */
    public static BufferedImage drawVerificationCodeImage() {
        //image
        BufferedImage image = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, BufferedImage.TYPE_INT_RGB);
        //In memory to create a brush
        Graphics g = image.getGraphics();

        g.setColor(Color.WHITE);

        g.fillRect(0, 0, IMG_WIDTH, IMG_HEIGHT);
        //Set the brush color
        g.setColor(getRandomColor(200, 250));
        //image border
        g.drawRect(0, 0, IMG_WIDTH - 2, IMG_HEIGHT - 2);

        //Set disturb line color
        g.setColor(getRandomColor(110, 133));
        //Generate random interference lines
        for (int i = 0; i &lt; DISTURB_LINE_SIZE; i++) {
            drawDisturbLine1(g);
            drawDisturbLine2(g);
        }
        //Generate a random number, set return data
        getRandomMathString();
        StringBuilder log = new StringBuilder();
        //The generated random string used to save the system
        for (int j = 0, k = randomString.length(); j &lt; k; j++) {
            Boolean rd = random();
            String t;
            if (rd) {
                t = CUCUMBERS;
            } else {
                t = NUM_STR;
            }
            int child;
            if (j == 1) {
                child = OPMap.get(String.valueOf(randomString.charAt(j)));
            } else {
                child = Integer.parseInt(String.valueOf(randomString.charAt(j)));

            }
            String ch = String.valueOf(t.charAt(child));
            log.append(ch);
            drawRandomString((Graphics2D) g, ch, j);
        }
        //= ?
        if (random()) {
            drawRandomString((Graphics2D) g, &quot;\u7B49\u4E8E\uFF1F&quot;, 3);
            log.append(&quot;\u7B49\u4E8E\uFF1F&quot;);
        } else {
            drawRandomString((Graphics2D) g, &quot;\u003d\uFF1F&quot;, 3);
            log.append(&quot;\u003d\uFF1F&quot;);
        }
        //Release the brush object
        g.dispose();
        System.out.println(log.toString());
        return image;
    }

    private static Boolean random() {
        int i = new Random().nextInt(2);
        if (i == 0) {
            return Boolean.TRUE;
        } else {
            return Boolean.FALSE;
        }
    }

    /**
     * Get a random string
     */
    private static void getRandomMathString() {
        //Randomly generated number 0 to 10
        int xx = random.nextInt(10);
        int yy = random.nextInt(10);
        //save getRandomString
        StringBuilder suChinese = new StringBuilder();
        //random 0,1,2
        int randomOperands = (int) Math.round(Math.random() * 2);
        //multiplication
        if (randomOperands == 0) {
            result = yy * xx;
            suChinese.append(yy);
            suChinese.append(&quot;*&quot;);
            suChinese.append(xx);
            //division, divisor cannot be zero, Be divisible
        } else if (randomOperands == 1) {
            if (!(xx == 0) &amp;&amp; yy % xx == 0) {
                result = yy / xx;
                suChinese.append(yy);
                suChinese.append(&quot;/&quot;);
            } else {
                result = yy + xx;
                suChinese.append(yy);
                suChinese.append(&quot;+&quot;);
            }
            suChinese.append(xx);
            //subtraction
        } else if (randomOperands == 2) {
            result = yy - xx;
            suChinese.append(yy);
            suChinese.append(&quot;-&quot;);
            suChinese.append(xx);
            //add
        } else {
            result = yy + xx;
            suChinese.append(yy);
            suChinese.append(&quot;+&quot;);
            suChinese.append(xx);
        }
        randomString = suChinese.toString();
    }

    private static Font getRandomFont() {
        int fontSize = (int) Math.round(Math.random() * 4 + 16);
        return new Font(null, Font.BOLD, fontSize);
    }

    /**
     * Draw a random string
     *
     * @param g Graphics
     * @param i the random number of characters
     */
    private static void drawRandomString(Graphics2D g, String randomVCCH, int i) {
        //Set the string font style
        g.setFont(getRandomFont());
        int rc = random.nextInt(255);
        int gc = random.nextInt(255);
        int bc = random.nextInt(255);
        g.setColor(new Color(rc, gc, bc));

        int x = random.nextInt(3);
        int y = random.nextInt(2);
        g.translate(x, y);

        int degree = new Random().nextInt() % 15;

        g.rotate(degree * Math.PI / 180, 5 + i * 25, 20);

        g.drawString(randomVCCH, 5 + i * 25, 20);
        //Reverse Angle
        g.rotate(-degree * Math.PI / 180, 5 + i * 25, 20);
    }

    /**
     * Draw line interference
     *
     * @param g Graphics
     */
    private static void drawDisturbLine1(Graphics g) {
        int x1 = random.nextInt(IMG_WIDTH);
        int y1 = random.nextInt(IMG_HEIGHT);
        int x2 = random.nextInt(13);
        int y2 = random.nextInt(15);
        g.drawLine(x1, y1, x1 + x2, y1 + y2);
    }

    /**
     * Draw line interference
     *
     * @param g Graphics
     */
    private static void drawDisturbLine2(Graphics g) {
        int x1 = random.nextInt(IMG_WIDTH);
        int y1 = random.nextInt(IMG_HEIGHT);
        int x2 = random.nextInt(13);
        int y2 = random.nextInt(15);
        g.drawLine(x1, y1, x1 - x2, y1 - y2);
    }

    /**
     * For random color
     *
     * @param fc fc
     * @param bc bc
     * @return color random color
     */
    private static Color getRandomColor(int fc, int bc) {
        if (fc &gt; 255) {
            fc = 255;
        }
        if (bc &gt; 255) {
            bc = 255;
        }
        //Generate random RGB trichromatic
        int r = fc + random.nextInt(bc - fc - 16);
        int g = fc + random.nextInt(bc - fc - 14);
        int b = fc + random.nextInt(bc - fc - 18);
        return new Color(r, g, b);
    }

    /**
     * result.&lt;br/&gt;
     *
     * @return the result &lt;br/&gt;
     */
    public static int getResult() {
        return result;
    }

}
</code></pre>
<blockquote>
<p>使用<code>getResult</code>获取答案，效果图</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://wangfashuai.top/upload/2020/3/%E6%89%B9%E6%B3%A8%202020-03-06%20175102-316a8a1b5ab0478fb7c7baa8a637876f.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript POST方式下载文件 ]]></title>
        <id>https://fikacode.github.io/post/javascriptPostDownloadFile/</id>
        <link href="https://fikacode.github.io/post/javascriptPostDownloadFile/">
        </link>
        <updated>2021-01-17T06:32:00.000Z</updated>
        <content type="html"><![CDATA[<h4 id="来自网上">来自网上。</h4>
<pre><code>postDownLoadFile: function (options) {
    var config = $.extend(true, { method: 'post' }, options);
    var $iframe = $('&lt;iframe id=&quot;admin_self_down-file-iframe&quot; /&gt;');
    var $form = $('&lt;form target=&quot;down-file-iframe&quot; method=&quot;' + config.method + '&quot; /&gt;');
    $form.attr('action', config.url);
    for (var key in config.data) {
        $form.append('&lt;input type=&quot;hidden&quot; name=&quot;' + key + '&quot; value=&quot;' + config.data[key] + '&quot; /&gt;');
    }
    $iframe.append($form);
    $(document.body).append($iframe);
    $form[0].submit();
    $iframe.remove();
}
</code></pre>
<p><code>options</code> 中设置url即可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mysql 5.7 表名大小写、ONLY_FULL_GROUP_BY和中文UTF-8的设置问题]]></title>
        <id>https://fikacode.github.io/post/mysql57setLowerCaseTableAndSqlModeAndutf8/</id>
        <link href="https://fikacode.github.io/post/mysql57setLowerCaseTableAndSqlModeAndutf8/">
        </link>
        <updated>2021-01-17T06:29:28.000Z</updated>
        <content type="html"><![CDATA[<h4 id="表名大小写敏感">表名大小写敏感</h4>
<pre><code>lower_case_table_names=1
</code></pre>
<h4 id="only_full_group_by-问题"><code>ONLY_FULL_GROUP_BY</code> 问题</h4>
<pre><code>sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
</code></pre>
<h4 id="中文和utf-8设置">中文和<code>UTF-8</code>设置</h4>
<pre><code>[mysqld]
character_set_server=utf8

[client]
default-character-set=utf8
</code></pre>
<blockquote>
<p>以上设置都在配置文件里面修改</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mysql 5.7 root 密码没法设置的问题]]></title>
        <id>https://fikacode.github.io/post/mysql57SetPassword/</id>
        <link href="https://fikacode.github.io/post/mysql57SetPassword/">
        </link>
        <updated>2021-01-12T10:41:36.000Z</updated>
        <content type="html"><![CDATA[<p>问题源于5.7 使用了密码插件，修改root密码可以这样来：</p>
<ol>
<li>修改插件：</li>
</ol>
<pre><code>update mysql.user set plugin = 'mysql_native_password' where user='root'；
flush privileges；
</code></pre>
<ol start="2">
<li>更新密码：</li>
</ol>
<pre><code>update mysql.user set authentication_string=password('new_password') where user='root'；
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SSH 管理多个Key文件]]></title>
        <id>https://fikacode.github.io/post/sshManageKeys/</id>
        <link href="https://fikacode.github.io/post/sshManageKeys/">
        </link>
        <updated>2021-01-10T06:38:36.000Z</updated>
        <content type="html"><![CDATA[<p>在 ~/.ssh 文件夹下面新建 config，指定key</p>
<pre><code>Host xxx.xxx.xxx.xxx
	HostName xxx.xxx.xxx.xxx
        PreferredAuthentications publickey
        IdentityFile ~/.ssh/id_rsa_gitlab
        User User1
    
Host xxx.xxx.xxx.xxx
        HostName xxx.xxx.xxx.xxx
        PreferredAuthentications publickey
        IdentityFile ~/.ssh/id_rsa_github
        User User2
</code></pre>
<blockquote>
<p><code>Host</code> 可以是IP或者域名<br>
<code>HostName</code> 同<code>Host</code><br>
<code>IdentityFile</code> 对应的Key私钥<br>
<code>User</code> 私钥对应的用户</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java request 请求转发]]></title>
        <id>https://fikacode.github.io/post/javaRequestForward/</id>
        <link href="https://fikacode.github.io/post/javaRequestForward/">
        </link>
        <updated>2021-01-10T06:35:10.000Z</updated>
        <content type="html"><![CDATA[<p>使用<code>RestTemplate</code>简单实现。</p>
<pre><code>String body = IOUtils.toString(request.getInputStream(), Charset.forName(request.getCharacterEncoding()));
Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();
String method = request.getMethod();
try {
	restTemplate.exchange(url,
                    HttpMethod.valueOf(method),
                    new HttpEntity&lt;&gt;(body),
                    Object.class,
                    parameterMap);
} catch (RuntimeException ignored) {
}
</code></pre>
<blockquote>
<p><code>IOUtils</code>是<code>commons-io</code>的包<br>
<code>url</code>是转发的<code>url</code></p>
</blockquote>
]]></content>
    </entry>
</feed>